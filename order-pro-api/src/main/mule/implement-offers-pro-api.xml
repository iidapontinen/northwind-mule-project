<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:sockets="http://www.mulesoft.org/schema/mule/sockets" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sockets http://www.mulesoft.org/schema/mule/sockets/current/mule-sockets.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="implement-orders-pro-offers-GET" doc:id="4e6dfa0a-6be5-46d6-8352-f717a9713b8e" >
		<logger level="INFO" doc:name="Offer-pro-starting" doc:id="1d0b80ff-30ca-4301-890d-69b8b29c4d0e" message="Offer pro starting"/>
		<http:request method="GET" doc:name="GET offers-sapi-flow" doc:id="d1e1de4f-7a9c-48b1-9605-b9f958812815" path="/api/offers" config-ref="HTTP_Request_offer_sapi"/>
		<logger level="INFO" doc:name="Offer-pro-ending" doc:id="cef6ceff-10f6-408c-906d-dea699acfa2b" />
	</flow>
	<flow name="implement-orders-pro-offers-POST" doc:id="77f9972a-9462-48c4-a236-0058af69fc17" >
		<logger level="INFO" doc:name="Offer-pro-starting" doc:id="70ebfa5e-990d-41e0-b8f2-009a587778e7" />
<!-- [STUDIO:"Set Payload Mock payload"]		<set-payload value='#[output application/json&#10;&#45;&#45;-&#10;{&#10;	"productID": 2,&#10;	"quantity": 15,&#10;	"customerID": "ALFKI"&#10;}]' doc:name="Set Payload Mock payload" doc:id="cc94dd01-527f-4e38-9927-85d63bdd431e" /> [STUDIO] -->
		<db:select doc:name="UnitsInStock and target 'units'" doc:id="ec005592-2599-41f4-a45f-84c985c87860" config-ref="Database_Config" target="units" targetValue="#[payload.UnitsInStock[0]]">
			<db:sql ><![CDATA[SELECT UnitsInStock FROM products
WHERE ProductID = :productID]]></db:sql>
			<db:input-parameters ><![CDATA[#["productID" : payload.productID]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="caaa9f09-6857-41ea-abed-83135cd02945" >
			<when expression="#[payload.quantity &gt; vars.units]">
				<ee:transform doc:name="Out of stock" doc:id="71f2acf3-ab58-4e70-a3cb-bc453d7fa43c">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload ++ { "status": "Out of Stock" }
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<http:request method="POST" doc:name="POST offers-sapi-flow" doc:id="9b402dc0-ca22-42bf-8ac1-cf1925796bcc" config-ref="HTTP_Request_offer_sapi" path="/api/offers"/>
<!-- [STUDIO:"Logger"]				<logger level="INFO" doc:name="Logger" doc:id="183cec56-f49a-4fb9-9b75-2ef946d7a126" message="liian suuri määrä pyydetty"/> [STUDIO] -->
			</when>
			<otherwise >
				<ee:transform doc:name="Pending" doc:id="b04a8a48-fc26-411e-8818-a8a18a011226">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload ++ { "status": "Pending" }]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<http:request method="POST" doc:name="POST offers-sapi-flow" doc:id="50130b5f-f61b-4bf0-98dc-1589c3f8f870" config-ref="HTTP_Request_offer_sapi" path="/api/offers" responseTimeout="600000"/>
<!-- [STUDIO:"Logger"]				<logger level="INFO" doc:name="Logger" doc:id="f037e5e8-862e-49f8-8875-5bc0acc72c0e" message="default"/> [STUDIO] -->
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Offer-pro-ending" doc:id="95ebdf74-7a7b-4629-9323-8d3dfb78531e" />
	</flow>
	<flow name="implement-orders-pro-offers-PATCH" doc:id="3d764a83-5d00-402f-bdc7-e622eb709328" >
		<logger level="INFO" doc:name="Offer-pro-starting" doc:id="2885e577-dcb3-4e09-92f7-6a472bc8190a" />
<!-- [STUDIO:"Mock Payload"]		<set-payload value='#[output application/json&#10;&#45;&#45;-&#10;{&#10;	"offerID": 13,&#10;	"discountProposed": 5,&#10;	"employeeID": 3,&#10;	"customerID": "PICCO"&#10;}]' doc:name="Mock Payload" doc:id="0505d33b-ae0b-42a4-8072-de1342b1c7b7" /> [STUDIO] -->
		<db:select doc:name="UnitsInStock and target 'units'" doc:id="017227ee-44f5-4bdf-a179-cafb01b5588b" config-ref="Database_Config" target="units" targetValue="#[payload.UnitsInStock[0]]">
			<db:sql><![CDATA[SELECT products.UnitsInStock
FROM products
WHERE ProductID IN 
(SELECT ProductID FROM offers
		WHERE OfferID = :offerID)]]></db:sql>
			<db:parameter-types />
			<db:input-parameters><![CDATA[#["offerID" : payload.offerID]]]></db:input-parameters>
		</db:select>
		<db:select doc:name="UnitPrice and target 'unitPrice'" doc:id="1ab33171-2d5d-4b9d-8740-a2de044371a1" config-ref="Database_Config" target="unitPrice" targetValue="#[payload.UnitPrice[0]]">
			<db:sql><![CDATA[SELECT products.UnitPrice
FROM products
WHERE ProductID IN 
(SELECT ProductID FROM offers
		WHERE OfferID = :offerID)]]></db:sql>
			<db:input-parameters ><![CDATA[#["offerID" : payload.offerID]]]></db:input-parameters>
		</db:select>
		<db:select doc:name="Quantity and target 'quantity'" doc:id="a7092c51-3617-43fc-a506-be1e6c63e555" config-ref="Database_Config" target="quantity" targetValue="#[payload.quantity[0]]">
			<db:sql><![CDATA[SELECT Quantity FROM offers
WHERE OfferID = :offerID]]></db:sql>
			<db:input-parameters><![CDATA[#["offerID" : payload.offerID]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="60eb9325-97fa-4fe4-8328-51981a91a629">
			<when expression="#[vars.quantity &gt; vars.units]">
				<ee:transform doc:name="Out of stock" doc:id="c1a67309-413f-4f26-9329-9fa5f8371ded">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{ 
	"offerID": payload.offerID,
	"employeeID": payload.employeeID,
	"status": "Out of Stock" 
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<http:request method="PATCH" doc:name="PATCH offers-sapi-flow" doc:id="9b22fcc6-6e52-42d3-a4bc-89075dc36fad" config-ref="HTTP_Request_offer_sapi" path="/api/offers" />
			</when>
			<otherwise>
				<validation:is-number numberType="INTEGER" doc:name="Is number" doc:id="e7700d9b-a35b-4045-80ed-a97a0397d293" value="#[payload.discountProposed]"/>
				<set-variable value='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"totalPrice": sum([vars.unitPrice * vars.quantity] - [vars.unitPrice * vars.quantity * payload.discountProposed/100])&#10;}]' doc:name="totalPrice" doc:id="02ba814c-5c95-4e33-9de0-aa0a3bd3267a" variableName="totalPrice"/>
				<ee:transform doc:name="Update offer with details to Proposed" doc:id="2ee2407c-e1be-4a2a-b886-4b2623fcd524">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"offerID": payload.offerID,
	"employeeID": payload.employeeID,
	"priceDiscount": payload.discountProposed,
	"totalPrice": vars.totalPrice[0],
	"dateCreated": now() as Date,
	"status": "Proposed"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<http:request method="PATCH" doc:name="PATCH offers-sapi-flow" doc:id="05b3b493-db86-493a-a915-9f6800a9f6fe" config-ref="HTTP_Request_offer_sapi" path="/api/offers/" />
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Offer-pro-ending" doc:id="c70a14ac-8ded-4855-a22d-379f6064c720" />
	</flow>
	<flow name="implement-orders-pro-offers-by-customerID-GET" doc:id="5c10595b-f810-47dc-8f82-51f2539e10b5" >
		<logger level="INFO" doc:name="Start of get customer ID flow" doc:id="4b66a8dc-186f-49f1-a792-8fa6c0be2d4a" />
		<http:request method="GET" doc:name="call-sys-api-offer" doc:id="b8869b9b-2964-4415-b02b-c492c5ced36a" config-ref="HTTP_Request_offer_sapi" path="/api/offers/{customerID}" responseTimeout="300000">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	customerID : attributes.uriParams.'customerID'
}]]]></http:uri-params>
			<http:query-params ><![CDATA[#[output application/java
---
{
	status : attributes.queryParams.'status'
}]]]></http:query-params>
		</http:request>
		<logger level="INFO" doc:name="Logger" doc:id="a0c67849-4abe-4a5e-acfa-237296498464" />
	</flow>
	<flow name="orders-pro-by-customerID-offerID-PATCH" doc:id="0e7c2fd4-67a8-4b11-8c22-fa7b1433d854" >
		<logger level="INFO" doc:name="Start of patch customer and offer ID flow" doc:id="5b6515ba-ba5c-4cf9-afe7-4f847d5c2a12" />
		<http:request method="PATCH" doc:name="call-sys-api-offer" doc:id="888101ce-e936-4580-b3c0-683ac1241441" path="/api/offers" config-ref="HTTP_Request_offer_sapi">
			<http:body ><![CDATA[#[output application/json
---
payload ++
{"offerID" : attributes.uriParams.'offerID',
	"dateApproved" : now() as Date}
}]]]></http:body>
		</http:request>
		<logger level="INFO" doc:name="Logger" doc:id="49187be2-8046-4ea7-815d-9ae28a55c3af" />
	</flow>
</mule>
